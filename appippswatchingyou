<!doctype html>
<html lang="id">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>!!! SECURITY ALERT !!!</title>
<style>
  :root{--bg:#070403;--red:#ff2b2b;--muted:rgba(255,255,255,0.75)}
  html,body{height:100%;margin:0;background:linear-gradient(180deg,#000,#110b0b);font-family:Inter,system-ui,Segoe UI,Roboto,Helvetica,Arial;color:#fff}
  .wrap{min-height:100%;display:flex;align-items:center;justify-content:center;padding:18px}
  .card{width:100%;max-width:740px;padding:20px;border-radius:12px;background:rgba(0,0,0,0.55);box-shadow:0 12px 40px rgba(0,0,0,0.6);text-align:center;position:relative;overflow:hidden}
  .title{color:var(--red);font-weight:900;letter-spacing:1px;margin-bottom:6px;font-size:18px}
  .big{font-weight:800;font-size:20px;margin:6px 0}
  .sub{color:var(--muted);margin-bottom:10px}
  .count{font-size:44px;font-weight:900;margin:10px 0}
  .progress{height:10px;background:rgba(255,255,255,0.06);border-radius:999px;overflow:hidden;margin:12px 0}
  .bar{height:100%;width:0%;background:linear-gradient(90deg,var(--red),#ff6a6a);transition:width 400ms linear}
  .log{background:rgba(0,0,0,0.28);padding:10px;border-radius:8px;text-align:left;font-family:monospace;font-size:13px;color:#ffdede;margin-top:12px}
  .btn{display:inline-block;margin-top:12px;padding:8px 12px;border-radius:8px;background:rgba(255,255,255,0.06);cursor:pointer;border:1px solid rgba(255,255,255,0.04)}
  .screenshot-overlay{
    position:fixed;inset:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,0.7);backdrop-filter:blur(4px);z-index:9999;visibility:hidden;opacity:0;transition:opacity .25s;
  }
  .sbox{width:92%;max-width:520px;background:#111;padding:18px;border-radius:12px;border:2px solid rgba(255,0,0,0.12);text-align:left}
  .thumb{width:100%;height:160px;border-radius:8px;background:linear-gradient(135deg,#220000,#330a0a);display:flex;align-items:center;justify-content:center;color:#ffdede;font-weight:900;font-size:18px}
  .meta{margin-top:10px;font-family:monospace;color:#ffdede}
  .visible{visibility:visible;opacity:1}
  footer{font-size:12px;color:rgba(255,255,255,0.45);margin-top:12px}
</style>
</head>
<body>
<div class="wrap">
  <div class="card" id="card">
    <div class="title">!!! SECURITY NOTICE !!!</div>
    <div class="big">FRONTCAM ACTIVATED</div>
    <div class="sub">Face match: <strong>RapipIsHere!</strong> — confidence 98.7%</div>
    <div class="count" id="countdown">05</div>

    <div class="progress" aria-hidden="true"><div class="bar" id="bar"></div></div>

    <div class="log" id="logArea">
      &gt; SYSTEM OK<br>
      &gt; SENSOR: FRONT CAM ONLINE<br>
      &gt; ACTION: Preparing evidence packet...
    </div>

    <div style="display:flex;gap:10px;justify-content:center">
      <div class="btn" id="simBtn">Simulate Screenshot</div>
      <div class="btn" id="closeBtn">Close Notice</div>
    </div>

    <footer>Tap again to escalate — interactions recorded</footer>
  </div>
</div>

<!-- Screenshot overlay (simulated) -->
<div id="sOverlay" class="screenshot-overlay" role="dialog" aria-hidden="true">
  <div class="sbox">
    <div style="display:flex;justify-content:space-between;align-items:center">
      <div style="font-weight:900;color:var(--red)">Screenshot detected</div>
      <div style="color:var(--muted);font-size:13px" id="timeDetected"></div>
    </div>
    <div class="thumb" id="thumb">IMG_XXXX_RAPIP.png</div>
    <div class="meta" id="metaArea">
      File saved: <strong>IMG_<span id="imgId">001</span>_RAPIP.png</strong><br>
      Upload status: <span id="uploadStatus">queued</span>
    </div>
    <div style="margin-top:10px;display:flex;gap:8px;justify-content:flex-end">
      <div class="btn" id="dismissBtn">Dismiss</div>
    </div>
  </div>
</div>

<script>
(function(){
  const bar = document.getElementById('bar');
  const countdown = document.getElementById('countdown');
  const log = document.getElementById('logArea');
  const sOverlay = document.getElementById('sOverlay');
  const timeDetected = document.getElementById('timeDetected');
  const uploadStatus = document.getElementById('uploadStatus');
  const imgIdEl = document.getElementById('imgId');
  const thumb = document.getElementById('thumb');

  // visitor count localStorage
  let visits = parseInt(localStorage.getItem('rapip_visits')||"0");
  visits++; localStorage.setItem('rapip_visits', visits);
  let skipIntro = (visits > 1);

  // startup progress like previous panic
  let t = skipIntro ? 0 : 5;
  countdown.textContent = String(t).padStart(2,'0');
  let progress = 0;
  function advance(){
    if(t>0){
      t--;
      countdown.textContent = String(t).padStart(2,'0');
      progress += 20;
      bar.style.width = progress + '%';
      log.innerHTML += '<br>&gt; UPLOADING EVIDENCE... ' + progress + '%';
      setTimeout(advance, 700);
    } else {
      bar.style.width = '100%';
      log.innerHTML += '<br>&gt; UPLOAD COMPLETE. OWNER NOTIFIED';
    }
  }
  if(!skipIntro) setTimeout(advance, 700);
  else { bar.style.width='100%'; log.innerHTML += '<br>&gt; REPEAT ACCESS — OWNER ALREADY NOTIFIED'; }

  // helper to show fake screenshot overlay
  let screenshotCounter = parseInt(localStorage.getItem('rapip_screens')||"0");
  function showScreenshotSim(triggeredBy){
    screenshotCounter++;
    localStorage.setItem('rapip_screens', screenshotCounter);
    const id = String(100 + screenshotCounter).slice(1);
    imgIdEl.textContent = id;
    thumb.textContent = 'IMG_' + id + '_RAPIP.png';
    const now = new Date();
    timeDetected.textContent = now.toLocaleTimeString();
    uploadStatus.textContent = 'uploading 0%';
    sOverlay.classList.add('visible');

    // fake upload progress
    let p = 0;
    const iv = setInterval(()=> {
      p += Math.floor(Math.random()*25)+10;
      if(p>=100) p=100;
      uploadStatus.textContent = 'uploading ' + p + '%';
      if(p>=100){
        clearInterval(iv);
        uploadStatus.textContent = 'uploaded';
        log.innerHTML += `<br>&gt; SCREENSHOT ${id} SAVED — OWNER NOTIFIED`;
      }
    }, 450);

    // small meta changes to feel real
    log.innerHTML += `<br>&gt; Screenshot event detected (${triggeredBy}) — saving file IMG_${id}_RAPIP.png`;
  }

  // listen for PrintScreen key (desktop)
  document.addEventListener('keydown', (e)=>{
    const k = e.key || e.code || '';
    // PrintScreen key detection (key === "PrintScreen" or code 44)
    if(k === 'PrintScreen' || e.keyCode === 44){
      showScreenshotSim('PrintScreen');
    }
    // common shortcuts: Ctrl+S, Ctrl+Shift+S
    if((e.ctrlKey || e.metaKey) && (k.toLowerCase()==='s' || k==='KeyS')){
      e.preventDefault && e.preventDefault();
      showScreenshotSim('Ctrl+S');
    }
  });

  // visibilitychange: many users minimize/lock before screenshot on mobile
  document.addEventListener('visibilitychange', ()=>{
    if(document.hidden){
      // treat as potential screenshot attempt - slight delay to seem plausible
      setTimeout(()=> {
        // only trigger if the page remained hidden briefly
        if(document.hidden) showScreenshotSim('visibilitychange');
      }, 600);
    }
  });

  // Simulate button (for testing or when real events don't fire)
  document.getElementById('simBtn').addEventListener('click', ()=> showScreenshotSim('manual'));

  // dismiss overlay
  document.getElementById('dismissBtn').addEventListener('click', ()=> {
    sOverlay.classList.remove('visible');
  });

  // close notice (soft)
  document.getElementById('closeBtn').addEventListener('click', ()=> {
    log.innerHTML += '<br>&gt; USER CLOSED NOTICE — EVENT STILL RECORDED';
    // soften UI
    document.getElementById('card').style.opacity = '0.85';
  });

  // small keyboard panic trigger (optional)
  document.addEventListener('keydown', (e)=>{
    if(e.key==='p' || e.key==='P'){
      log.innerHTML += '<br>&gt; MANUAL ESCALATION TRIGGERED';
    }
  });
})();
</script>
</body>
</html>
